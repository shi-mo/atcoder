#!/usr/bin/env python3
import sys

def solve(A: int, B: int, C: int, D: int, E: int, F: int, X: int):
    l1 = B * ((X//(A+C))*A + min(A, X%(A+C)))
    l2 = E * ((X//(D+F))*D + min(D, X%(D+F)))
    if (l1 == l2):
        print('Draw')
        return
    print('Takahashi' if l2 < l1 else 'Aoki')

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    E = int(next(tokens))  # type: int
    F = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    solve(A, B, C, D, E, F, X)

if __name__ == '__main__':
    main()
